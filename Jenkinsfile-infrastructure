pipeline {
    agent {
        label 'sharepoint-auto||hvmanager'
    }

    stages {
        stage('Infrastructure - Prepare') {
            agent {
                label 'win&&hvmanager'
            }
            steps {
                echo 'Copying Windows Image...'
                powershell '(Resolve-Path ./).Path'
    /*                powershell 'cd sp2016dev; New-Item -Path images/packer_cache -ItemType Directory -Force | Out-Null; Copy-Item C:/sp-onprem-files/524abd34eb2abcc5e5a12da5b1c97fa3a6a626a831c29b4e74801f4131fb08ed.iso ./images/packer_cache'
                powershell 'cd sp2016dev; if ( !( Get-Item ./images/packer_cache/524abd34eb2abcc5e5a12da5b1c97fa3a6a626a831c29b4e74801f4131fb08ed.iso -ErrorAction Ignore ) ) { Write-Host "Windows Server 2016 image missing"; exit 1 }'
    */
                powershell '''cd infrastructure;
                    New-Item -Path images/packer_cache -ItemType Directory -Force | Out-Null;
                    if ( !( Get-Item ./images/packer_cache/d408977ecf91d58e3ae7c4d0f515d950c4b22b8eadebd436d57f915a0f791224.iso -ErrorAction Ignore ) ) {
                        Copy-Item C:/sp-onprem-files/d408977ecf91d58e3ae7c4d0f515d950c4b22b8eadebd436d57f915a0f791224.iso ./images/packer_cache
                    }
                    if ( !( Get-Item ./images/packer_cache/d408977ecf91d58e3ae7c4d0f515d950c4b22b8eadebd436d57f915a0f791224.iso -ErrorAction Ignore ) ) { Write-Host "Windows Server 2012 R2 image missing"; exit 1 }
                    if ( !( Get-Item ./images/http/SQLServer2014SP1.zip -ErrorAction Ignore ) ) {
                        Copy-Item C:/sp-onprem-files/SQLServer2014SP1.zip ./images/http
                    }
                    if ( !( Get-Item ./images/http/SQLServer2014SP1.zip -ErrorAction Ignore ) ) { Write-Host "SQL Server media missing"; exit 1 }
                    if ( !( Get-Item ./images/http/SPServer2013SP1.zip -ErrorAction Ignore ) ) {
                        Copy-Item C:/sp-onprem-files/SPServer2013SP1.zip ./images/http
                    }
                    if ( !( Get-Item ./images/http/SPServer2013SP1.zip -ErrorAction Ignore ) ) { Write-Host "SharePoint Server media missing"; exit 1 }
                    if ( !( Get-Item ./images/http/VS2017.zip -ErrorAction Ignore ) ) {
                        Copy-Item C:/sp-onprem-files/VS2017.zip ./images/http
                    }
                    if ( !( Get-Item ./images/http/VS2017.zip -ErrorAction Ignore ) ) { Write-Host "Visual Studio media missing"; exit 1 }
                    if ( !( Get-Item ./images/http/SSMS-Setup-ENU.exe -ErrorAction Ignore ) ) {
                        Copy-Item C:/sp-onprem-files/SSMS-Setup-ENU.exe ./images/http
                    }
                    if ( !( Get-Item ./images/http/SSMS-Setup-ENU.exe -ErrorAction Ignore ) ) { Write-Host "SQL Management Studio media missing"; exit 1 }
                '''
            }
        }
        stage('Infrastructure - Build') {
            agent {
                label 'win&&hvmanager'
            }
            steps {
                /*
                powershell 'cd sp2016dev/images; ./preparevmimages.ps1'
                powershell 'if ( !( vagrant box list | ? { $_ -like "sp-win2016-db-web-code *" } ) ) { exit 1 }'
                */
                powershell 'cd infrastructure/images; ./preparevmimages.ps1 sp-win2012r2-ad,sp-win2012r2-db-web'
                powershell 'if ( !( vagrant box list | ? { $_ -like "sp-win2012r2-db-web *" } ) ) { exit 1 }'
                powershell 'if ( !( vagrant box list | ? { $_ -like "sp-win2012r2-ad *" } ) ) { exit 1 }'
            }
        }
        stage('Infrastructure - Deploy') {
            agent {
                label 'win&&hvmanager'
            }
            steps {
                echo 'Building farms'
                powershell '''cd infrastructure/stacks/main-2013-ci;
                    $env:SPDEVOPSSTARTER_VAGRANT_SPLABEL = "main-2013";
                    vagrant up;
                    if ( !( vagrant status | ? { $_ -like "AD01* running (*" } ) ) { Write-Host "AD01 is not running"; exit 1 }
                    if ( !( vagrant status | ? { $_ -like "DBWEBCODE01* running (*" } ) ) { Write-Host "DBWEBCODE01 is not running"; exit 1 }
                '''
            }
        }
        stage('Build') {
            agent {
                label 'sharepoint-auto-main-2013'
            }
            steps {
                echo 'Building the solution'
            }
        }
        stage('Deploy') {
            agent {
                label 'sharepoint-auto-main-2013'
            }
            steps {
                echo 'Deploying the solution'
                powershell './src/spfarm_customizations.ps1'
                powershell './src/sampleps.ps1'
            }
        }
        stage('Test') {
            agent {
                label 'sharepoint-auto-main-2013'
            }
            steps {
                echo 'Running tests'
            }
        }
    }
}