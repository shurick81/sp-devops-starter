pipeline {
    agent {
        label 'sharepoint-auto || hvmanager-cleanvms'
    }
    
    stages {
        stage('Infrastructure - Prepare') {
            agent {
                label 'win && hvmanager-cleanvms'
            }
            steps {
                powershell '(Resolve-Path ./).Path'
                powershell 'Write-Host "$(Get-Date) SPDEVOPSSTARTER_JENKINSHOST: $env:SPDEVOPSSTARTER_JENKINSHOST"'
                echo 'Copying Windows Image...'
                powershell '''cd infrastructure;
                    if ( !( Get-Item ./images/http/SQLServer2014SP1.zip -ErrorAction Ignore ) ) {
                        Copy-Item C:/sp-onprem-files/SQLServer2014SP1.zip ./images/http
                    }
                    if ( !( Get-Item ./images/http/SQLServer2014SP1.zip -ErrorAction Ignore ) ) { Write-Host "SQL Server media missing"; exit 1 }
                    if ( !( Get-Item ./images/http/SPServer2013SP1.zip -ErrorAction Ignore ) ) {
                        Copy-Item C:/sp-onprem-files/SPServer2013SP1.zip ./images/http
                    }
                    if ( !( Get-Item ./images/http/SPServer2013SP1.zip -ErrorAction Ignore ) ) { Write-Host "SharePoint Server media missing"; exit 1 }
                    if ( !( Get-Item ./images/http/VS2017.zip -ErrorAction Ignore ) ) {
                        Copy-Item C:/sp-onprem-files/VS2017.zip ./images/http
                    }
                    if ( !( Get-Item ./images/http/VS2017.zip -ErrorAction Ignore ) ) { Write-Host "Visual Studio media missing"; exit 1 }
                    if ( !( Get-Item ./images/http/SSMS-Setup-ENU.exe -ErrorAction Ignore ) ) {
                        Copy-Item C:/sp-onprem-files/SSMS-Setup-ENU.exe ./images/http
                    }
                    if ( !( Get-Item ./images/http/SSMS-Setup-ENU.exe -ErrorAction Ignore ) ) { Write-Host "SQL Management Studio media missing"; exit 1 }
                '''
            }
        }
        stage('Infrastructure - Build') {
            agent {
                label 'win && hvmanager-cleanvms'
            }
            steps {
                powershell '''cd infrastructure/images;
                    ./preparevmimages.ps1 sp-win2012r2-ad,sp-win2012r2-db-web,sp-win2016-ad,sp-win2016-db-web
                    if ( !( vagrant box list | ? { $_ -like "sp-win2012r2-db-web *" } ) ) { exit 1 }
                    if ( !( vagrant box list | ? { $_ -like "sp-win2012r2-ad *" } ) ) { exit 1 }
                    if ( !( vagrant box list | ? { $_ -like "sp-win2016-db-web *" } ) ) { exit 1 }
                    if ( !( vagrant box list | ? { $_ -like "sp-win2016-ad *" } ) ) { exit 1 }
                '''
            }
        }
        stage('Infrastructure - Deploy') {
            agent {
                label 'win && hvmanager-cleanvms'
            }
            steps {
                echo 'Building farms'
                powershell '''cd infrastructure/stacks/ci-2013-main;
                    vagrant destroy DBWEBCODE01 --force;
                    if ( !( vagrant status | ? { $_ -like "DBWEBCODE01* not created (*" } ) ) { Write-Host "DBWEBCODE01 is not destroyed"; exit 1 }
                    $env:SPDEVOPSSTARTER_VAGRANT_JENKINSLABEL = "clean-2013";
                    vagrant up --provider virtualbox;
                    if ( !( vagrant status | ? { $_ -like "AD01* running (*" } ) ) { Write-Host "AD01 is not running"; exit 1 }
                    if ( !( vagrant status | ? { $_ -like "DBWEBCODE01* running (*" } ) ) { Write-Host "DBWEBCODE01 is not running"; exit 1 }
                '''
            }
        }
        stage('Build') {
            agent {
                label 'sharepoint-auto-clean-2013'
            }
            steps {
                echo 'Building the solution'
            }
        }
        stage('Deploy') {
            agent {
                label 'sharepoint-auto-clean-2013'
            }
            steps {
                echo 'Deploying the solution'
                powershell './src/spfarm/farmtest.ps1'
            }
        }
        stage('Test') {
            agent {
                label 'sharepoint-auto-clean-2013'
            }
            steps {
                echo 'Running tests'
            }
        }
    }
}